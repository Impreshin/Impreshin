
<!doctype html>
<!--[if lt IE 7]>
<html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>
<html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>
<html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en"> <!--<![endif]-->
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	<title>{{ page['meta']['title']|default("") }}</title>
	<meta name="description" content="">
	<meta name="author" content="">


	<meta name="viewport" content="width=device-width,initial-scale=1">
	<link rel="stylesheet" type="text/css" href="/ui/_css/custom-theme/jquery-ui.css"/>
	<link rel="stylesheet" type="text/css" href="/min/css.{{_v}}.css"/>


	<script src="/ui/_js/libs/modernizr.{{_v}}.js"></script>


	{% if page['template_css'] %}
	<link rel="stylesheet" href="{{ page['template_css'] }}">
	{% endif %}

	{% if page['print'] %}
	<link rel="alternate" media="print" href="{{ page['print'] }}">
	<link rel="alternate" type="text/html" media="print" href="{{ page['print'] }}">
	{% endif %}
	<link rel="shortcut icon" type="image/x-icon" href="/ui/_images/favicon.ico">
	<link rel="apple-touch-icon" href="/ui/_images/apple-touch.png">



</head>
<body>
{% include "_nav_top.tmpl" %}
{% if page['template'] %} {% include page['template'] %} {% endif %}


<footer id="pagefooter">
	<div class="container">
		<div style="position: absolute; left:10px;">
			<a href="#systemTimers-container" data-toggle="modal" ><i class="icon-time icon-d-grey"></i></a>
		</div>
		<div class="clearfix">
			<div class="row">
				<div class="span14" style="position:relative;">
					<div id="notice-area" class="span14">

						&nbsp;</div>
					<div id="notice-area-idle" class="c span10 offset3" style="position: absolute; top:0; left: 0; background-color: #444; display: none;">&nbsp;</div>
				</div>
				<div class="s" style="float: right;">
					<a href="javascript:" style="padding-right: 30px; color: #999;"><i class="icon-user icon-d-grey" style="margin-right: 10px;"></i>{{ _user['fullName']}}</a>
				</div>
			</div>
		</div>
	</div>

</footer>

<div id='systemTimers-container' class='modal hide fade'>
	<div class='modal-header'><a href='#' class='close' data-dismiss="modal">&times;</a>

		<h3>Debug</h3></div>
	<div class='modal-body'>
		<article>
			<table id='systemTimers'>

			</table>
		</article>
	</div>
	<div class='modal-footer'>

	</div>
</div>

<div id="displaylogout">
	<div class='box'>
		<h2>Inactivity</h2>

		<div class="timer"></div>
		<button class='btn primary ' style='margin-top: 20px; width: 190px;' id='keepalivebtn'>Keep me logged in</button>
		<a class='btn  ' style='margin-top: 20px; margin-left: 10px; width: 92px;' href='/logout'>logout</a>
	</div>
</div>

<!--[if lt IE 9]>
<script language="javascript" type="text/javascript" src="/ui/jqPlot/excanvas.js"></script>
<![endif]-->
<script  src="/ui/_js/libs/jquery.{{_v}}.js"></script>


<script src="/min/js.{{_v}}.js"></script>
<script src="/ui/_js/plugins/bootstrap-typehead-array.{{_v}}.js"></script>




<script type="text/javascript">
	var detailsRequest = [];
	var listRequest = [];
	var activityRequest = [];
	var transSpeed = '{{ transSpeed |default('400') }}';
	$(function () {
		$('body').tooltip({
			selector:'[rel=tooltip]'
		});
		$('body').popover({
			selector:'[rel=popover]'
		});


		$("*[rel=tooltip]").tooltip({
			live:true
		});

		$("[rel=popover]").popover({
			offset:5,
			live:true
		});

		$(document).ajaxError(function (e, xhr, settings, exception) {
			if (xhr.responseText) alert('error in: ' + settings.url + ' \n \n \n' + '\n' + xhr.responseText);
		});

		$(document).on("show", '#loggedinusers', function () {
			var $this = $(this);
			$this.find("#loggedinusers-activity table tbody").html('<tr><td colspan="2">Loading...</td></tr>');
			$.getJSON("/data/user_activity","", function (d) {
				d = d['data'];
				$area = $this.find("#loggedinusers-activity table tbody");
				if (!d[0]){
					$area.html('<tr><td colspan="2">No Users logged in for this company</td></tr>');
				} else {
					$area.jqotesub($("#template-logged-in-users"), d);
				}



			});
		});

	});
	$(document).ready(function () {

		$(document).on("click", ".modal .close-btn", function (e) {
			e.preventDefault();
			var $this = $(this), $modal = $this.closest(".modal");
			$modal.modal("hide");
		//	$("#settings-modal").modal('hide');
		});
		$(document).on("click", "*[data-dismiss='popup']", function (e) {
			e.preventDefault();
			var $this = $(this), $popup = $this.closest(".popup");
			$popup.fadeOut(transSpeed);
		});
		$(document).on("click", "*[data-target='popup']", function (e) {
			e.preventDefault();
			var $this = $(this), $popup = $this.attr("href");
			$($popup).fadeIn(transSpeed).trigger("popup-show");
		});


		$(document).on("show", ".modal", function () {
			var $this = $(this);
			var h = $(window).height();
			var th = $(this).height();

			mt = (th) / 2;
			if (h < th) {
				$this.css({
					"margin-top":-(h / 2)
				});

			} else {
				$this.css("margin-top", -mt);
			}

		});
		$(document).on('click', '.btn-row-details', function (e) {
			var $this = $(this), $table = $this.closest("table");
			var $clicked = $(e.target).closest("tr.btn-row-details");
			var active = true;

			if ($this.hasClass("active") && $clicked) active = false;

			$("tr.btn-row-details.active", $table).removeClass("active");
			if (active) {
				$this.addClass("active");
			}

			var show = $("tr.btn-row-details.active", $table).nextAll("tr.row-details");


			$("tr.row-details", $table).hide();
			if (show.length) {
				show = show[0];
				$(show).show();
			}


		});


		$(document).on("click", "#keepalivebtn", function () {
			$("#displaylogout").autoLogout('resetTimer');
			$.getJSON("/data/keepalive?keepalive=true", function (d) {
				$("#displaylogout").fadeOut(1000);
			})
		});
		$(document).on("click", "#keepalivebtn-logout", function () {
			$("#displaylogout").autoLogout('logout');

		});

	});
	var autologoutRequest = [];
	var $noticeareaIdle = $("#notice-area-idle");

	//logout 5 minutes
	// warning 4 minutes
	// show idle 2 minutes

	$("#displaylogout").autoLogout({
		LogoutTime          :600,

		onResetTimer        :function (e) {
			this.css("background-color", "rgba(250, 250, 250, 0.8)");
			$noticeareaIdle.stop(true, true).fadeOut(1000)

		},
		onLogout: function (timer){

			window.location = "/logout/?msg=You+were+logged+out+due+to+inactivity";
		},
		keepAlive: function(){
			$.getJSON("/data/keepalive/?keepalive=true", function (result) {});

		},
		onTimerSecond       :function (idle) {
			var $this = this;
			var settings = $this.data("settings");
			var LogoutTime = settings.LogoutTime;
			var parts = LogoutTime / 10;



			if (idle == Math.floor(parts * 4) || idle == Math.floor(parts * 7) || idle >= LogoutTime-3) {
				for (var i = 0; i < autologoutRequest.length; i++) autologoutRequest[i].abort();
				autologoutRequest.push($.getJSON("/data/keepalive", function (result) {
					var real_idle = result.idle;
					$this.data("timer", real_idle);
					idle = real_idle;
					if (idle >= LogoutTime) {
						window.location = "/logout/?msg=You+were+logged+out+due+to+inactivity";
					}
				}));
			}



			if (idle >= (parts * 4)+2){
				remaining = LogoutTime - idle;
				$noticeareaIdle.stop(true, true).html("You will be automaticaly logged out in "+ (remaining) +" seconds").fadeIn(1000)
			} else {
				$noticeareaIdle.stop(true, true).fadeOut(1000)
			}

			if (idle >= (parts * 7)+2){
				remaining = LogoutTime - idle;
				$this.stop(true,true).fadeIn(1000).find(".timer").html("You will be automaticaly logged out in " + (remaining) + " seconds");
			} else {
				$this.stop(true, true).fadeOut(1000);
			}

			var remaining = (LogoutTime - idle);
			var remain_p = (remaining / LogoutTime) * 100

			if (remain_p < 30){

				var new_p = (remain_p / 30)
				new_p = 1 - new_p;

				if (new_p>0.8)	this.css("background-color", "rgba(250, 250, 250, "+ new_p+")");
			}








		}
	});

	var uID = "{{ _user['ID'] }}";
	var jScrollPaneOptions = {
		showArrows:false,
		maintainPosition: false
	};
	var jScrollPaneOptionsMP = {
		showArrows:false,
		maintainPosition: true
	};

	$(document).ajaxComplete(function (event, request, settings) {
		var u = settings.url;
		var d = $.parseJSON(request.responseText);

		var page_size = request.getResponseHeader('Content-Length');
		page_size = (page_size)? page_size:"";

		if (u == "/data/keepalive") {
		} else {
			updatetimerlist(d, page_size);
		}

	});
	function updatetimerlist(d, page_size) {
		//console.log(d);
		if (!d){
			return false;
		}
		$("#displaylogout").autoLogout('resetTimer');

		var data = d['timer'];
		var page = d['page'];
		var models = d['models'];

		if (d['notifications']){
			$("#notice-area").jqotesub($("#template-notifications"), d['notifications']);
		}

		var pageSize = (page && page['size'])? page['size']: page_size;

		if (data) {
			var highlight = "";
			if (page['time'] > {{ _cfg['debug']['highlightfrom'] }}) highlight = 'style="color: red;"';
			var th = '<tr class="heading" style="background-color: #fdf5ce;"><td >' + page['page'] + ' : <span class="g">Size: ' + file_size(pageSize) + '</span></td><td class="s g"'+ highlight+'>' + page['time'] + '</td></tr>', thm;
			if (models) {
				thm = $("#template-timers-tr-models").jqote(models, "*");
			} else {
				thm = "";
			}
			$("#systemTimers").prepend(th + $("#template-timers-tr").jqote(data, "*")+ thm);
		}



	}
	function scrolling(api){

		$(document).off('mousewheel').on('mousewheel', function (event, delta, deltaX, deltaY) {
			if ($(event.target).closest(".modal").length || $(event.target).closest(".jspScrollable").length || $(event.target).closest(".select2-container").length ){
			} else {
				if (deltaY < 0) {
					deltaY = -deltaY;
				} else {
					deltaY = -deltaY;
				}

				deltaY = deltaY * 30;

				api.scrollByY(deltaY, false);
			}


		}).on('keydown',function(e){
//				console.log(api.getContentHeight);

				if ($(e.target).closest(".select2-container").length) {
				} else {


				var keyboardSpeed= 28, scrollPagePercent=.8;

				switch (e.keyCode) {
					case 40: // down
						api.scrollByY(keyboardSpeed, false);
						break;
					case 38: // up
						api.scrollByY(-keyboardSpeed, false);
						break;
					case 34: // page down
					case 32: // space

						api.scrollByY(300, false);
						break;
					case 33: // page up
						api.scrollByY(-300, false);
						break;

				}
				}
			});


	}
	function file_size(size) {
		if (!size){
			return 0;
		}
		var origSize = size;
		var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
		var i = 0;
		while (size >= 1024) {
			size /= 1024;
			++i;
		}

		if (origSize>1024){
			size = size.toFixed(1)
		}
		return size + ' ' + units[i];
	}
	if (!Array.prototype.indexOf) {
		Array.prototype.indexOf = function (elt /*, from*/) {
			var len = this.length >>> 0;

			var from = Number(arguments[1]) || 0;
			from = (from < 0) ? Math.ceil(from) : Math.floor(from);
			if (from < 0)
				from += len;

			for (; from < len; from++) {
				if (from in this && this[from] === elt)
					return from;
			}
			return -1;
		};
	}
	if (!Array.prototype.forEach) {
		Array.prototype.forEach = function (fun /*, thisp*/) {
			var len = this.length;
			if (typeof fun != "function")
				throw new TypeError();

			var thisp = arguments[1];
			for (var i = 0; i < len; i++) {
				if (i in this)
					fun.call(thisp, this[i], i, this);
			}
		};
	}
</script>
{% if page['template_js'] %}
<script src='{{ page['template_js'] }}'></script>
{% endif %}
<script type="text/x-jqote-template" id="template-notifications">
	<![CDATA[

	<% if (this.checked) { %>
		<span>
			<span>Checked -
			&nbsp; <%= this.checked.done %> of <%= this.checked.total %> &nbsp;
			</span>
			<% if (this.checked.percent) { %>
				<div style=" width: <% if (this.checked.percent>100) { %>100<% } else { %><%= this.checked.percent %><% } %>%; "></div>
			<% } %>
		</span>
	<% } %>
	<% if (this.placed) { %>
		<span>
			<span>Placed -
			&nbsp; <%= this.placed.done %> of <%= this.placed.total %> &nbsp;
			</span>
			<% if (this.placed.percent) { %>
				<div style=" width: <% if (this.placed.percent>100) { %>100<% } else { %><%= this.placed.percent %><% } %>%; "></div>
			<% } %>
		</span>
	<% } %>
	<% if (this.marketer && this.marketer.next_targets) { %>
		<span <% if (this.marketer.next_targets) { %>title="From: <%= this.marketer.next_targets.date_from %> | To: <%= this.marketer.next_targets.date_to %>" <% } %>>
			Marketer -
			<span>&nbsp;Total: <%= this.marketer.next_targets.done %> [<%= this.marketer.next_targets.records %>]
				<% if (this.marketer.next_targets.target) { %>&nbsp; &nbsp; Target: <%= this.marketer.next_targets.target %><% } %>
			</span>
			<% if (this.marketer.next_targets.target) { %>
				<div style="width: <% if (this.marketer.next_targets.percent>100) { %>100<% } else { %><%= this.marketer.next_targets.percent %><% } %>%;"></div>
			<% } %>
		</span>
	<% } %>
	<% if (this.production) { %>
		<span>
			Production -
			<span>&nbsp;Total Done: <%= this.production.records.done %> of <%= this.production.records.total %>&nbsp; &nbsp; Assigned Done: <%= this.production.assigned.done %> of <%= this.production.assigned.total %>
			</span>
			<% if (this.production.records.percent) { %>
				<div style="width: <% if (this.production.records.percent>100) { %>100<% } else { %><%= this.production.records.percent %><% } %>%;"></div>
			<% } %>
		</span>
	<% } %>



	]]>
</script>
<script type="text/x-jqote-template" id="template-timers-tr">
	<![CDATA[

	<tr>
		<td><*= this.msg *>
			<div class="s g"><*= this.arg *></div>
		</td>
		<td	<* if (this.tim>{{ _cfg['debug']['highlightfrom'] }}) { *>style="color: red;"<* } *>><*= this.tim *></td>
	</tr>

	]]>
</script>
<script type="text/x-jqote-template" id="template-timers-tr-models">
	<![CDATA[

	<tr style="background-color:#f1f1f1; ">
		<td><*= this.k *></td>
		<td style="width: 140px; <* if ( this.t > {{ _cfg['debug']['highlightfrom'] }} ) { *>color: red;<* } *>"><*= this.t *></td>
	</tr>
	<* for(var i in this.m) { *>
	<tr class="btn-row-details">
		<td class="s g"	<* if (this.m[i].c > 1) { *>style="color: red;"<* } *>>
			<*= this.m[i].c *>&nbsp;|&nbsp;<*= this.m[i].l *>
		</td>
		<td class="s g" <* if (this.m[i].t > {{ _cfg['debug']['highlightfrom'] }}) { *>style="color: red;"<* } *>>
			<*= this.m[i].t *>
		</td>
	</tr>

	<tr class="row-details">
		<td colspan="2">
			<table class='s g' style='width:100%'>

				<tbody>
				<* for(var g in this.m[i].m) { *>
				<tr>
					<td style="padding-left:30px;">

						<div style="margin-left: -20px;" class="dg">
							<*= this.m[i].m[g].arg.file *> : <*= this.m[i].m[g].arg.line *><br>
							<em style="margin-left: 10px;"><*= this.m[i].m[g].arg.class *>-><*= this.m[i].m[g].arg.function *>(<*= this.m[i].m[g].arg.args *>)</em>

						</div>
						<* if (this.m[i].m[g].bt) { *>
						<div style="margin-left: -20px;" class="">
							<*= this.m[i].m[g].bt.file *> : <*= this.m[i].m[g].bt.line *><br>
							<em style="margin-left: 10px;"><*= this.m[i].m[g].bt.class *>-><*= this.m[i].m[g].bt.function *>(<*= this.m[i].m[g].bt.args *>)</em>

						</div>
						<* } *>



						</td>
					<td style="width: 140px; <* if ( this.m[i].m[g].tim > {{ _cfg['debug']['highlightfrom'] }} ) { *>color: red;<* } *>"><*= this.m[i].m[g].tim *></td>
				</tr>
				<* } *>
				</tbody>
			</table>

		</td>
	</tr>
	<* } *>
	]]>
</script>
<script type="text/x-jqote-template" id="template-logged-in-users">
	<![CDATA[

	<tr>
		<td>
			<%= this.n %>
		</td>
		<td class="g ">
			<%= this.la %>
		</td>

	</tr>

	]]>
</script>
{% if page['template_tmpl'] %}
{% include page['template_tmpl'] %}
{% endif %}


</body>
</html>
